{"version":3,"sources":["Home.js","Issue.js","actionCreators.js","NewIssueForm.js","EditIssueForm.js","DescriptionSearch.js","ColumnFilter.js","ColumnDisplay.js","IssueList.js","App.js","serviceWorker.js","rootReducer.js","index.js"],"names":["Home","react_default","a","createElement","className","style","backgroundColor","padding","margin","width","Component","Issue","this","props","columnCheck","indexOf","task","CreatedDate","Description","Severity","Status","ResolvedDate","editpath","concat","_id","Id","Link","to","type","onClick","removeIssue","getIssue","ADD_ISSUE","REMOVE_ISSUE","GET_ISSUES","EDIT_ISSUES","FILTER_ISSUES","DISPLAY_COLUMN_ISSUES","SEARCH_ISSUES","NewIssueForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","displaySearchFilter","handleSubmit","bind","assertThisInitialized","handleChange","e","preventDefault","target","reset","history","push","value","key","name","setState","date","Date","dates","objectSpread","getTime","toString","document","getElementById","onSubmit","htmlFor","id","readOnly","required","rows","onChange","EditIssueForm","issue","_this2","match","params","issueId","axios","get","then","res","data","catch","error","console","log","_this3","put","err","setSeverity","selectSeverity1","selectSeverity2","selectSeverity3","selectStatus1","selectStatus2","selectStatus3","checked","withRouter","DescriptionSearch","searchText","handleSearchWithinIssues","ColumnFilter","chkcreateddate","chkdescription","chkseverity","chkstatus","displayFilterItems","getSeverityFilter","getStatusFilter","filterSev","handleFilterSeverity","filterStatus","ColumnDisplay","setDisplay","columnDisplayForm","forms","elements","columnDisplayArr","forEach","val","index","handleDisplayColumns","chkresolved","IssueList","handleAdd","handleEdit","handleFilter","handleDisplay","handleSearchDisplay","issues","addIssue","editIssue","filterIssues","displayColumnIssues","displaySearchIssues","getIssues","path","issueArr","filterCategory","hasOwnProperty","filter","undefined","length","map","src_Issue","columnDisplay","src_DescriptionSearch","getPreviousSearchText","src_ColumnFilter","src_ColumnDisplay","Route","component","NewIssueForm_NewIssueForm","assign","src_EditIssueForm","exact","connect","reduxState","dispatch","post","Redirect","fetch","method","json","handleRemove","handleIssues","filterData","searchData","App","data-toggle","data-target","marginLeft","render","Boolean","window","location","hostname","initialState","store","createStore","arguments","action","toConsumableArray","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","es","BrowserRouter","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8PAEqBA,0LAEb,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeC,MAAO,CAAEC,gBAAiB,UAAWC,QAAS,YAAaC,OAAQ,OAAQC,MAAO,SAC5GR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCAAgCH,EAAAC,EAAAC,cAAA,4CAA/C,0NAIAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACdH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,0DAEJF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,uEAbcO,6BCgDnBC,qLA5CP,OACIV,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAC8C,IAAtDQ,KAAKC,MAAMC,YAAYC,QAAQ,kBAA4Bd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBH,EAAAC,EAAAC,cAAA,gCAAgCS,KAAKC,MAAMG,KAAKC,aAAoB,MAC1G,IAAtDL,KAAKC,MAAMC,YAAYC,QAAQ,kBAA4Bd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBH,EAAAC,EAAAC,cAAA,+BAA+BS,KAAKC,MAAMG,KAAKE,aAAoB,MAC5G,IAAnDN,KAAKC,MAAMC,YAAYC,QAAQ,eAAyBd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBH,EAAAC,EAAAC,cAAA,4BAA4BS,KAAKC,MAAMG,KAAKG,UAAiB,MACrG,IAAjDP,KAAKC,MAAMC,YAAYC,QAAQ,aAAuBd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBH,EAAAC,EAAAC,cAAA,0BAA0BS,KAAKC,MAAMG,KAAKI,QAAe,MAC7F,IAAnDR,KAAKC,MAAMC,YAAYC,QAAQ,eAAyBd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBH,EAAAC,EAAAC,cAAA,iCAAiCS,KAAKC,MAAMG,KAAKK,cAAqB,uCASzK,IAAMC,EAAQ,gBAAAC,OAAmBX,KAAKC,MAAMG,KAAKQ,KACjD,OACAvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAMC,UAAU,QACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcC,MAAO,CAACC,gBAAiB,YAClDL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uBAAlB,aAAmDQ,KAAKC,MAAMG,KAAKS,KAEvExB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAMtB,UAAU,kDAAkDuB,GAAIL,GAAtE,WAEJrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,UAAQyB,KAAK,SAAUxB,UAAU,sCAAsCyB,QAASjB,KAAKC,MAAMiB,aAA3F,aAKR7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,MAAO,CAACC,gBAAiB,YAC/CM,KAAKmB,sBAtCVrB,8CCCPsB,EAAY,YACZC,EAAe,eACfC,EAAa,aACbC,EAAc,cACdC,EAAe,gBACfC,EAAwB,wBACxBC,EAAgB,oCCRRC,cACjB,SAAAA,EAAY1B,GAAM,IAAA2B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA7B,KAAA2B,IACdC,EAAAC,OAAAE,EAAA,EAAAF,CAAA7B,KAAA6B,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAjC,KAAMC,KACDiC,MAAQ,CACT9B,KAAK,CACGS,GAAG,GACHR,YAAY,GACZC,YAAY,GACZC,SAAS,GACTC,OAAO,GACPC,aAAa,IAErB0B,oBAAqB,UAEzBP,EAAKQ,aAAeR,EAAKQ,aAAaC,KAAlBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KACpBA,EAAKW,aAAeX,EAAKW,aAAaF,KAAlBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAdNA,4EAiBJY,GACVA,EAAEC,iBACFzC,KAAKC,MAAMmC,aAAapC,KAAKkC,MAAM9B,MACnCoC,EAAEE,OAAOC,QAET3C,KAAKC,MAAM2C,QAAQC,KAAK,0CAEfL,GACT,IAAIM,EAAQN,EAAEE,OAAOI,MACjBC,EAAMP,EAAEE,OAAOM,KACd5C,EAASJ,KAAKkC,MAAd9B,KACLA,EAAK2C,GAAOD,EACZ9C,KAAKiD,SAAS,CAAC7C,sDAGf,IAAI8C,EAAO,IAAIC,KACXC,EAAQ,IAAID,KAChBnD,KAAKiD,SAAS,CAAC7C,KAAKyB,OAAAwB,EAAA,EAAAxB,CAAA,GACX7B,KAAKkC,MAAM9B,KADD,CAEXS,GAAIuC,EAAME,UAAUC,WAAYlD,YAAa6C,EAAKK,2DAM1DC,SAASC,eAAe,uBAAuBjE,UAAY,wDAI3DgE,SAASC,eAAe,uBAAuBjE,UAAY,yFAQ3D,OACIH,EAAAC,EAAAC,cAAA,QAAMmE,SAAU1D,KAAKoC,cACjB/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAyBC,MAAO,CAACC,gBAAiB,YAC7DL,EAAAC,EAAAC,cAAA,8BAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,MAAO,CAACC,gBAAiB,YAChDL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,SAAOoE,QAAQ,WAAf,YACAtE,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAeoE,GAAG,UAAUZ,KAAK,KAAMhC,KAAK,OAAO6C,UAAQ,EAACf,MAAO9C,KAAKkC,MAAM9B,KAAKS,MAExGxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,SAAOoE,QAAQ,MAAf,gBACAtE,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAeoE,GAAG,KAAKZ,KAAK,cAAchC,KAAK,OAAO6C,UAAQ,EAACf,MAAO9C,KAAKkC,MAAM9B,KAAKC,gBAI3GhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,SAAOoE,QAAQ,OAAf,kBACAtE,EAAAC,EAAAC,cAAA,YAAUC,UAAU,kCAAmCoE,GAAG,MAAME,UAAQ,EAACd,KAAK,cAAchC,KAAK,OAAQ+C,KAAK,IAAIC,SAAUhE,KAAKuC,eACjIlD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,wDAKAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,SAAOoE,QAAQ,OAAf,kBACAtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeoE,GAAG,OACjCvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBwB,KAAK,QAAQ4C,GAAG,OAAOZ,KAAK,WAAWF,MAAM,QAAQkB,SAAUhE,KAAKuC,eACxGlD,EAAAC,EAAAC,cAAA,SAAOoE,QAAQ,OAAOnE,UAAU,oBAAhC,UAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBwB,KAAK,QAAQ4C,GAAG,OAAOZ,KAAK,WAAWF,MAAM,QAAQkB,SAAUhE,KAAKuC,eACxGlD,EAAAC,EAAAC,cAAA,SAAOoE,QAAQ,OAAOnE,UAAU,oBAAhC,UAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBwB,KAAK,QAAQ4C,GAAG,OAAOZ,KAAK,WAAWF,MAAM,WAAWkB,SAAUhE,KAAKuC,eAC3GlD,EAAAC,EAAAC,cAAA,SAAOoE,QAAQ,OAAOnE,UAAU,oBAAhC,eAKRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,SAAOoE,QAAQ,OAAf,UACAtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeoE,GAAG,OACjCvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBwB,KAAK,QAAQ4C,GAAG,OAAOZ,KAAK,SAASF,MAAM,OAAOkB,SAAUhE,KAAKuC,eACrGlD,EAAAC,EAAAC,cAAA,SAAOoE,QAAQ,OAAOnE,UAAU,oBAAhC,SAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBwB,KAAK,QAAQ4C,GAAG,OAAOZ,KAAK,SAASF,MAAM,cAAckB,SAAUhE,KAAKuC,eAC5GlD,EAAAC,EAAAC,cAAA,SAAOoE,QAAQ,OAAOnE,UAAU,oBAAhC,gBAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBwB,KAAK,QAAQ4C,GAAG,OAAOZ,KAAK,SAASF,MAAM,WAAWkB,SAAUhE,KAAKuC,eACzGlD,EAAAC,EAAAC,cAAA,SAAOoE,QAAQ,OAAOnE,UAAU,oBAAhC,aAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,SAAOoE,QAAQ,OAAf,oBACAtE,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAgBoE,GAAG,MAAMZ,KAAK,eAAgBhC,KAAK,SACpE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,4DAMRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BAAf,yBAKJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcC,MAAO,CAACC,gBAAiB,YAClDL,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAmBwB,KAAK,SAAS8B,MAAM,mBAtItChD,qBCEpCmE,cACF,SAAAA,EAAYhE,GAAM,IAAA2B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA7B,KAAAiE,IAEdrC,EAAAC,OAAAE,EAAA,EAAAF,CAAA7B,KAAA6B,OAAAG,EAAA,EAAAH,CAAAoC,GAAAhC,KAAAjC,KAAMC,KACDiC,MAAQ,CACTgC,MAAM,CACErD,GAAG,GACHR,YAAY,GACZC,YAAY,GACZC,SAAS,GACTC,OAAO,GACPC,aAAa,IAEjBmD,GAAI,GAEZhC,EAAKQ,aAAeR,EAAKQ,aAAaC,KAAlBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KACpBA,EAAKW,aAAeX,EAAKW,aAAaF,KAAlBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAfNA,mFAiBC,IAAAuC,EAAAnE,KAEX4D,EAAK5D,KAAKC,MAAMmE,MAAMC,OAAOC,QAC7BJ,EAAQ,GACZV,SAASC,eAAe,uBAAuBjE,UAAY,SAC3D+E,IAAMC,IAAN,QAAA7D,OAAkBiD,IACjBa,KAAK,SAAAC,GACJR,EAAMQ,EAAIC,KACVR,EAAKlB,SAAS,CAACiB,QAAMN,SAEtBgB,MAAM,SAAAC,GAAK,OAAGC,QAAQC,IAAIF,0CAIjBrC,GAAG,IAAAwC,EAAAhF,KAEbwC,EAAEC,iBACF8B,IAAMU,IAAN,QAAAtE,OAAkBX,KAAKkC,MAAMgC,MAAMtD,KAAMZ,KAAKkC,MAAMgC,OACnDO,KAAK,SAAAC,GAAG,OAAGM,EAAK/E,MAAM2C,QAAQC,KAAK,OACnC+B,MAAM,SAAAM,GAAG,OAAIJ,QAAQC,IAAIG,0CAEjB1C,GACT,IAAIM,EAAQN,EAAEE,OAAOI,MACjBC,EAAMP,EAAEE,OAAOM,KACdkB,EAAUlE,KAAKkC,MAAfgC,MACLA,EAAMnB,GAAOD,EACb9C,KAAKiD,SAAS,CAACiB,yDAGfV,SAASC,eAAe,uBAAuBjE,UAAY,2CAI3D,IAAI2F,EAAcnF,KAAKkC,MAAMgC,MAAM3D,SAAU6E,EAAkB,GAAIC,EAAkB,GAAKC,EAAkB,GAAyCC,EAAgB,GAAIC,EAAgB,GAAKC,EAAgB,GAG9M,MAFmB,UAAhBN,EAAyBC,EAAkB,UAAmC,UAAhBD,EAA0BE,EAAkB,UAAkBC,EAAkB,UAChI,SAF2GtF,KAAKkC,MAAMgC,MAAM1D,OAEpH+E,EAAgB,UAAmC,gBAAhBJ,EAAgCK,EAAgB,UAAkBC,EAAgB,UAE1IpG,EAAAC,EAAAC,cAAA,QAAMmE,SAAU1D,KAAKoC,cACjB/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAyBC,MAAO,CAACC,gBAAiB,YAC7DL,EAAAC,EAAAC,cAAA,8BAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,MAAO,CAACC,gBAAiB,YAChDL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,SAAOoE,QAAQ,WAAf,YACAtE,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAeoE,GAAG,UAAUZ,KAAK,KAAMhC,KAAK,OAAO6C,UAAQ,EAACf,MAAO9C,KAAKkC,MAAMgC,MAAMrD,MAEzGxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,SAAOoE,QAAQ,MAAf,gBACAtE,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAeoE,GAAG,KAAKZ,KAAK,cAAchC,KAAK,OAAO6C,UAAQ,EAACf,MAAO9C,KAAKkC,MAAMgC,MAAM7D,gBAI5GhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,SAAOoE,QAAQ,OAAf,kBACAtE,EAAAC,EAAAC,cAAA,YAAUC,UAAU,kCAAmCoE,GAAG,MAAME,UAAQ,EAACd,KAAK,cAAchC,KAAK,OAAQ+C,KAAK,IAAKC,SAAUhE,KAAKuC,aAAcO,MAAO9C,KAAKkC,MAAMgC,MAAM5D,cACxKjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,wDAKAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,SAAOoE,QAAQ,OAAf,kBACAtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeoE,GAAG,OACjCvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBwB,KAAK,QAAQ4C,GAAG,OAAOZ,KAAK,WAAWF,MAAM,QAAQ4C,QAASN,EAAiBpB,SAAUhE,KAAKuC,eAClIlD,EAAAC,EAAAC,cAAA,SAAOoE,QAAQ,OAAOnE,UAAU,oBAAhC,UAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBwB,KAAK,QAAQ4C,GAAG,OAAOZ,KAAK,WAAWF,MAAM,QAAQ4C,QAASL,EAAiBrB,SAAUhE,KAAKuC,eAClIlD,EAAAC,EAAAC,cAAA,SAAOoE,QAAQ,OAAOnE,UAAU,oBAAhC,UAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBwB,KAAK,QAAQ4C,GAAG,OAAOZ,KAAK,WAAWF,MAAM,WAAY4C,QAASJ,EAAiBtB,SAAUhE,KAAKuC,eACtIlD,EAAAC,EAAAC,cAAA,SAAOoE,QAAQ,OAAOnE,UAAU,oBAAhC,eAKRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,SAAOoE,QAAQ,OAAf,UACAtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeoE,GAAG,OACjCvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBwB,KAAK,QAAQ4C,GAAG,OAAOZ,KAAK,SAASF,MAAM,OAAO4C,QAASH,EAAevB,SAAUhE,KAAKuC,eAC7HlD,EAAAC,EAAAC,cAAA,SAAOoE,QAAQ,OAAOnE,UAAU,oBAAhC,SAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBwB,KAAK,QAAQ4C,GAAG,OAAOZ,KAAK,SAASF,MAAM,cAAc4C,QAASF,EAAgBxB,SAAUhE,KAAKuC,eACrIlD,EAAAC,EAAAC,cAAA,SAAOoE,QAAQ,OAAOnE,UAAU,oBAAhC,gBAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBwB,KAAK,QAAQ4C,GAAG,OAAOZ,KAAK,SAASF,MAAM,WAAW4C,QAASD,EAAgBzB,SAAUhE,KAAKuC,eAClIlD,EAAAC,EAAAC,cAAA,SAAOoE,QAAQ,OAAOnE,UAAU,oBAAhC,aAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,SAAOoE,QAAQ,OAAf,oBACAtE,EAAAC,EAAAC,cAAA,SAAOC,UAAU,eAAgBoE,GAAG,MAAMZ,KAAK,eAAegB,SAAUhE,KAAKuC,aAAcO,MAAO9C,KAAKkC,MAAMgC,MAAMzD,aAAeO,KAAK,SACvI3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,8DASZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcC,MAAO,CAACC,gBAAiB,YAClDL,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAmBwB,KAAK,SAAS8B,MAAM,yBAnIpDhD,aA2Ib6F,cAAW1B,GCpGX2B,cAxCX,SAAAA,EAAY3F,GAAM,IAAA2B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA7B,KAAA4F,IACdhE,EAAAC,OAAAE,EAAA,EAAAF,CAAA7B,KAAA6B,OAAAG,EAAA,EAAAH,CAAA+D,GAAA3D,KAAAjC,KAAMC,KACDiC,MAAQ,CACT2D,WAAY,IAEhBjE,EAAKQ,aAAeR,EAAKQ,aAAaC,KAAlBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KACpBA,EAAKW,aAAeX,EAAKW,aAAaF,KAAlBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KANNA,4EASLY,GACTA,EAAEC,iBAEFzC,KAAKC,MAAM6F,yBAAyB9F,KAAKkC,MAAM2D,iDAEtCrD,GACT,IAAIM,EAAQN,EAAEE,OAAOI,MACrB9C,KAAKiD,SAAS,CAAC4C,WAAY/C,qCAI3B,OACIzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kCAAlB,uBAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,QAAMmE,SAAU1D,KAAKoC,cACjB/C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,6BAA6BwB,KAAK,OAAO4C,GAAG,SAASI,SAAUhE,KAAKuC,gBAC3FlD,EAAAC,EAAAC,cAAA,QAAME,MAAO,CAACC,gBAAiB,YAAYL,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAmBwB,KAAK,SAAS8B,MAAM,wBA/BnGhD,aC2EjBiG,cA1EX,SAAAA,EAAY9F,GAAM,IAAA2B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA7B,KAAA+F,IACdnE,EAAAC,OAAAE,EAAA,EAAAF,CAAA7B,KAAA6B,OAAAG,EAAA,EAAAH,CAAAkE,GAAA9D,KAAAjC,KAAMC,KACDiC,MAAQ,CACT8D,gBAAgB,EAChBC,gBAAgB,EAChBC,aAAa,EACbC,WAAW,GAEfvE,EAAKwE,mBAAqBxE,EAAKwE,mBAAmB/D,KAAxBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAC1BA,EAAKyE,kBAAoBzE,EAAKyE,kBAAkBhE,KAAvBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KACzBA,EAAK0E,gBAAkB1E,EAAK0E,gBAAgBjE,KAArBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAVTA,+HAkBAY,GACd,IAAI+D,EAAY/D,EAAEE,OAAOI,MACzB9C,KAAKC,MAAMuG,qBAAqB,CAACjG,SAAUgG,4CAG/B/D,GACZ,IAAIiE,EAAejE,EAAEE,OAAOI,MAC5B9C,KAAKC,MAAMuG,qBAAqB,CAAChG,OAAQiG,qCAKzC,OACIpH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iCAAiCyB,QAASjB,KAAKoG,oBAAjE,WAEJ/G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAOqE,GAAG,cACNvE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BAAd,mBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBwB,KAAK,QAAQ4C,GAAG,aAAaZ,KAAK,YAAYF,MAAM,QAAQ7B,QAASjB,KAAKqG,oBAC9GhH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBmE,QAAQ,cAA5C,UAEJtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBwB,KAAK,QAAQ4C,GAAG,aAAaZ,KAAK,YAAYF,MAAM,QAAQ7B,QAASjB,KAAKqG,oBAC9GhH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBmE,QAAQ,cAA5C,UAEJtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBwB,KAAK,QAAQ4C,GAAG,aAAaZ,KAAK,YAAYF,MAAM,WAAW7B,QAASjB,KAAKqG,oBACjHhH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBmE,QAAQ,cAA5C,cAGJtE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,0BAAd,iBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBwB,KAAK,QAAQ4C,GAAG,aAAaZ,KAAK,YAAYF,MAAM,OAAO7B,QAASjB,KAAKsG,kBAC7GjH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBmE,QAAQ,cAA5C,SAEJtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBwB,KAAK,QAAQ4C,GAAG,aAAaZ,KAAK,YAAYF,MAAM,cAAc7B,QAASjB,KAAKsG,kBACpHjH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBmE,QAAQ,cAA5C,gBAEJtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBwB,KAAK,QAAQ4C,GAAG,aAAaZ,KAAK,YAAYF,MAAM,WAAW7B,QAASjB,KAAKsG,kBACjHjH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBmE,QAAQ,cAA5C,wBAjED7D,aC+DZ4G,cA9DX,SAAAA,EAAYzG,GAAM,IAAA2B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA7B,KAAA0G,IACd9E,EAAAC,OAAAE,EAAA,EAAAF,CAAA7B,KAAA6B,OAAAG,EAAA,EAAAH,CAAA6E,GAAAzE,KAAAjC,KAAMC,KAWV0G,WAAa,SAACnE,GACV,IAAIoE,EAAoBpD,SAASqD,MAAT,WAA6BC,SAAS,gBAC1DC,EAAmB,GACvBH,EAAkBI,QAAQ,SAASC,EAAKC,IACI,IAArCN,EAAkBM,GAAOxB,SACxBqB,EAAiBlE,KAAK+D,EAAkBM,GAAOtD,MAGvDhC,EAAK3B,MAAMkH,qBAAqBJ,IAlBhCnF,EAAKM,MAAQ,CACT8D,gBAAgB,EAChBC,gBAAgB,EAChBC,aAAa,EACbC,WAAW,EACXiB,aAAY,GAEhBxF,EAAK+E,WAAa/E,EAAK+E,WAAWtE,KAAhBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KATJA,wEAyBd,OACIvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kCAAlB,cAEJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAOqE,GAAG,cACNvE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,kBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBwB,KAAK,WAAW4C,GAAG,iBAAiBZ,KAAK,eAAe0C,SAAgE,IAAtD1F,KAAKC,MAAMC,YAAYC,QAAQ,mBAAmC,GAAK6D,SAAUhE,KAAK2G,aAC5LtH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBmE,QAAQ,SAA5C,iBAEJtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBwB,KAAK,WAAW4C,GAAG,iBAAiBZ,KAAK,eAAe0C,SAAgE,IAAtD1F,KAAKC,MAAMC,YAAYC,QAAQ,mBAAmC,GAAK6D,SAAUhE,KAAK2G,aAC5LtH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBmE,QAAQ,SAA5C,gBAEJtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBwB,KAAK,WAAW4C,GAAG,cAAcZ,KAAK,eAAe0C,SAA6D,IAAnD1F,KAAKC,MAAMC,YAAYC,QAAQ,gBAAgC,GAAM6D,SAAUhE,KAAK2G,aACvLtH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBmE,QAAQ,SAA5C,aAEJtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBwB,KAAK,WAAW4C,GAAG,YAAYZ,KAAK,eAAe0C,SAA2D,IAAjD1F,KAAKC,MAAMC,YAAYC,QAAQ,cAA8B,GAAK6D,SAAUhE,KAAK2G,aAClLtH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBmE,QAAQ,SAA5C,WAEJtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBwB,KAAK,WAAW4C,GAAG,cAAcZ,KAAK,eAAe0C,SAA8D,IAAnD1F,KAAKC,MAAMC,YAAYC,QAAQ,gBAAgC,GAAK6D,SAAUhE,KAAK2G,aACvLtH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBmE,QAAQ,SAA5C,6BArDJ7D,aCYtBuH,cACF,SAAAA,EAAYpH,GAAM,IAAA2B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA7B,KAAAqH,IACdzF,EAAAC,OAAAE,EAAA,EAAAF,CAAA7B,KAAA6B,OAAAG,EAAA,EAAAH,CAAAwF,GAAApF,KAAAjC,KAAMC,KACDqH,UAAY1F,EAAK0F,UAAUjF,KAAfR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KACjBA,EAAK2F,WAAa3F,EAAK2F,WAAWlF,KAAhBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAClBA,EAAK4F,aAAe5F,EAAK4F,aAAanF,KAAlBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KACpBA,EAAK6F,cAAgB7F,EAAK6F,cAAcpF,KAAnBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KACrBA,EAAK8F,oBAAsB9F,EAAK8F,oBAAoBrF,KAAzBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAC3BA,EAAKM,MAAQ,CACTyF,OAAQ/F,EAAK3B,MAAM0H,OACnBxF,oBAAqB,WATXP,yEAYRqF,GACNjH,KAAKC,MAAM2H,SAASX,uCAEZrD,GACR5D,KAAKC,MAAMiB,YAAY0C,sCAEhBqD,GACPjH,KAAKC,MAAM4H,UAAUZ,wCAEZA,GACTjH,KAAKC,MAAM6H,aAAab,yCAEdA,GACVjH,KAAKC,MAAM8H,oBAAoBd,+CAEfA,GAChBjH,KAAKC,MAAM+H,oBAAoBf,qCAGzBrD,GACN5D,KAAKC,MAAM4H,UAAUjE,+CAIrB5D,KAAKiD,SAAS,CAACd,oBAAsB,YACrCnC,KAAKC,MAAMgI,yDAGXjI,KAAKiD,SAAS,CAACd,oBAAsB,0DAGR,YAA1BnC,KAAKC,MAAMmE,MAAM8D,OAChB1E,SAASC,eAAe,uBAAuBjE,UAAY,4CAG3D,IAAA2E,EAAAnE,KAEAmI,EAAW,GAAIR,EAAS,GA0B5B,OAvBIQ,GADwD,IAAzDnI,KAAKC,MAAMmI,eAAeC,eAAe,YAC7BrI,KAAKC,MAAM0H,OAAOW,OAAO,SAAArB,GAAG,OAAIA,EAAI1G,WAAa4D,EAAKlE,MAAMmI,eAAe7H,YAC1B,IAAvDP,KAAKC,MAAMmI,eAAeC,eAAe,UACrCrI,KAAKC,MAAM0H,OAAOW,OAAO,SAAArB,GAAG,OAAIA,EAAIzG,SAAW2D,EAAKlE,MAAMmI,eAAe5H,SACnD,KAA1BR,KAAKC,MAAM4F,iBAA+C0C,IAA1BvI,KAAKC,MAAM4F,WACrC7F,KAAKC,MAAM0H,OAAOW,OAAO,SAAArB,GAAG,OAAwD,IAApDA,EAAI3G,YAAYH,QAAQgE,EAAKlE,MAAM4F,cAEjE7F,KAAKC,MAAM0H,OAGP,IAAlBA,EAAOa,SACNb,EAAS,wDAEbA,EAASQ,EAASM,IAAI,SAACxB,EAAKC,GAAN,OAClB7H,EAAAC,EAAAC,cAACmJ,EAAD,CACIxH,YAAaiD,EAAKjD,YAAYmB,KAAK8B,EAAM8C,EAAIrG,KAC7CiH,UAAW1D,EAAK0D,UAAUxF,KAAK8B,EAAM8C,EAAIrG,KACzCR,KAAM6G,EACN/G,YAAaiE,EAAKlE,MAAM0I,cACxB9C,WAAY1B,EAAKlE,MAAM4F,WACvB9C,IAAKkE,EAAIrG,QAKbvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAWQ,KAAKkC,MAAMC,oBAAqByB,GAAG,uBAC9CvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqJ,EAAD,CAAmB9C,yBAA0B9F,KAAK0H,oBAAqBmB,sBAAuB7I,KAAKC,MAAM4F,cAE7GxG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACuJ,EAAD,CAActC,qBAAsBxG,KAAKwH,gBAE7CnI,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACwJ,EAAD,CAAe5B,qBAAsBnH,KAAKyH,cAAevH,YAAaF,KAAKC,MAAM0I,mBAI7FtJ,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CACId,KAAK,cACLe,UAAY,SAAAhJ,GAAK,OACbZ,EAAAC,EAAAC,cAAC2J,EAADrH,OAAAsH,OAAA,GAAkBlJ,EAAlB,CAAyBmC,aAAc+B,EAAKmD,gBAGpDjI,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CACId,KAAK,wBACLe,UAAY,SAAAhJ,GAAK,OACbZ,EAAAC,EAAAC,cAAC6J,EAADvH,OAAAsH,OAAA,GAAmBlJ,EAAnB,CAA0BmC,aAAc+B,EAAKoD,iBAGrDlI,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CAAOK,OAAK,EAACnB,KAAK,UAAUe,UAAW,kBACnC5J,EAAAC,EAAAC,cAAA,WAAMoI,cAxGF7H,aAwHTwJ,cARO,SAACC,GACnB,MAAO,CACH5B,OAAQ4B,EAAW5B,OACnBS,eAAgBmB,EAAWnB,eAC3BO,cAAeY,EAAWZ,cAC1B9C,WAAY0D,EAAW1D,aAGS,CAAC+B,SN3DlC,SAAkBxH,GAErB,OAAO,SAAAoJ,GACH,OAAOjF,IAAMkF,KAAK,QAAQrJ,GACzBqE,KAAK,SAAAC,GAAG,OAAEI,QAAQC,IAAIL,KACtBD,KAAK,SAAAE,GAAI,OAAI6E,EAjEX,CACHxI,KAAMI,EACNhB,KA+DiCuE,MAChCC,MAAM,SAAAM,GAAG,OAAIJ,QAAQC,IAAIG,OMqDiB2C,UNjD5C,SAAmB3D,GAEtB,OAAO,SAAAsF,GACH,OAAOjF,IAAMU,IAAN,QAAAtE,OAAkBuD,EAAMtD,KAAMsD,GACpCO,KAAK,SAAAC,GAAG,OAAGrF,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAU3I,GAAG,cACxB6D,MAAM,SAAAM,GAAG,OAAIJ,QAAQC,IAAIG,OM4C4BhE,YNvCvD,SAAqB0C,GACxB,OAAO,SAAA4F,GACH,OAAOG,MAAK,QAAAhJ,OAASiD,GAAM,CAACgG,OAAQ,WACnCnF,KAAK,SAAAC,GAAG,OAAIA,EAAImF,SAChBpF,KAAK,SAAAE,GAAI,OAAI6E,EAtEf,SAAsB5F,GACzB,MAAO,CACH5C,KAAMK,EACNuC,MAmEuBkG,CAAalG,MACnCgB,MAAM,SAAAM,GAAG,OAAIJ,QAAQC,IAAIG,OMkCyC+C,UNpEpE,WACH,OAAO,SAAAuB,GACH,OAAOG,MAAM,SACZlF,KAAK,SAAAC,GAAG,OAAIA,EAAImF,SAChBpF,KAAK,SAAAE,GAAI,OAAI6E,EAlCf,SAAsB7E,GACzB,MAAO,CACH3D,KAAMM,EACNqD,QA+BuBoF,CAAapF,MACnCC,MAAM,SAAAM,GAAG,OAAIJ,QAAQC,IAAIG,OM+DoD4C,aN9B/E,SAAsBkC,GACzB,OAAO,SAAAR,GAAcA,EA5Dd,CACHxI,KAAMQ,EACNmD,KA0DuCqF,MM6BqDjC,oBN1B7F,SAA6BiC,GAChC,OAAO,SAAAR,GAAcA,EAzDd,CACHxI,KAAMS,EACNkD,KAuDwCqF,MMyByEhC,oBNvBlH,SAA6BiC,GAChC,OAAO,SAAAT,GAAcA,EArDd,CACHxI,KAAMU,EACNiD,KAmDuCsF,OMsBhCX,CAAgIjC,GC7FhI6C,mLA/BX,OACE7K,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,2BACCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCAAsCC,MAAO,CAACC,gBAAiB,YAC5EL,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAMtB,UAAU,eAAeuB,GAAG,KAAlC,iBACA1B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBwB,KAAK,SAASmJ,cAAY,WAAWC,cAAY,2BAClF/K,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BoE,GAAG,0BAC3CvE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAMtB,UAAU,WAAWuB,GAAG,IAAItB,MAAO,CAAE4K,WAAY,SAAvD,SAEFhL,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAMtB,UAAU,WAAWuB,GAAG,UAAUtB,MAAO,CAAE4K,WAAY,SAA7D,oBAGJhL,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAMtB,UAAU,uCAAuCuB,GAAG,eAA1D,mBAIJ1B,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CAAOK,OAAK,EAACnB,KAAK,IAAIoC,OAAS,kBAAQjL,EAAAC,EAAAC,cAACmK,EAAA,EAAD,CAAU3I,GAAG,aACpD1B,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CAAOd,KAAK,QAAQe,UAAW7J,IAC/BC,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CAAOd,KAAK,UAAUe,UAAW5B,YA1BzBvH,aCKEyK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStG,MACvB,+EChBAuG,EAAe,CACjBhD,OAAS,GACT/D,GAAG,EACHwE,eAAgB,GAChBO,cAAe,GACf9C,WAAY,wBCMV+E,SAAQC,YDHC,WAAmD,IAA7B3I,EAA6B4I,UAAAtC,OAAA,QAAAD,IAAAuC,UAAA,GAAAA,UAAA,GAArBH,EAAcI,EAAOD,UAAAtC,OAAA,EAAAsC,UAAA,QAAAvC,EAE9D,OAAOwC,EAAO/J,MACV,KAAKM,EACD,OAAOO,OAAAwB,EAAA,EAAAxB,CAAA,GAAIK,EAAX,CAAkByF,OAAQoD,EAAOpG,OACrC,KAAKvD,EACD,OAAOS,OAAAwB,EAAA,EAAAxB,CAAA,GAAKK,EAAZ,CAAmByF,OAAO9F,OAAAmJ,EAAA,EAAAnJ,CAAKK,EAAMyF,QAAZhH,OAAA,CAAoBoK,EAAO7G,UACxD,KAAK3C,EACD,OAAOM,OAAAwB,EAAA,EAAAxB,CAAA,GAAIK,EAAX,CAAkByF,OAAQoD,EAAOpG,OACrC,KAAKtD,EACD,IAAIsG,EAASzF,EAAMyF,OAAOW,OAAO,SAAArB,GAAG,OAAIA,EAAIrG,MAAQmK,EAAOnH,KAC3D,OAAO/B,OAAAwB,EAAA,EAAAxB,CAAA,GAAKK,EAAZ,CAAmByF,WACvB,KAAKnG,EACD,OAAOK,OAAAwB,EAAA,EAAAxB,CAAA,GAAKK,EAAZ,CAAmBkG,eAAgB2C,EAAOpG,OAC9C,KAAKlD,EACD,OAAOI,OAAAwB,EAAA,EAAAxB,CAAA,GAAKK,EAAZ,CAAmByG,cAAeoC,EAAOpG,OAC7C,KAAKjD,EACD,OAAOG,OAAAwB,EAAA,EAAAxB,CAAA,GAAKK,EAAZ,CAAmB2D,WAAYkF,EAAOpG,OAC1C,QACI,OAAOzC,ICdf+I,YAAQC,YAAgBC,KACxBX,OAAOY,8BAAgCZ,OAAOY,kCAKlDC,IAASf,OAETjL,EAAAC,EAAAC,cAAC+L,EAAA,EAAD,CAAUV,MAAOA,GACbvL,EAAAC,EAAAC,cAACgM,EAAA,EAAD,KACAlM,EAAAC,EAAAC,cAACiM,EAAD,QAGJhI,SAASC,eAAe,SFqGlB,kBAAmBgI,WACrBA,UAAUC,cAAcC,MAAMlH,KAAK,SAAAmH,GACjCA,EAAaC","file":"static/js/main.f5fdbc61.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nexport default class Home extends Component{\r\n    render(){\r\n        return (\r\n            <div className=\"mx-auto mt-5\" style={{ backgroundColor: '#C2CACC', padding: '30px 50px', margin: '30px', width: '100%' }}>\r\n                <div className=\"font-weight-bold text-center\" ><p>Issue Tracker web application. </p>\r\n                The data for issues are managed by the MongoDB. It has interface with express server through http to retrieve and store data.\r\n                By clicking the Update button, we will be able to update the issue or change the status. \r\n                </div>\r\n                <ul className=\"mt-4\">\r\n                <li>\r\n                    <div>To add new issues click on Add New Button.</div> \r\n                </li>\r\n                <li>\r\n                    <div>To view issues click on List of Issues Button.</div>\r\n                </li>\r\n                </ul>\r\n          </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Issue extends Component{\r\n        \r\n    getIssue(){\r\n        return (\r\n            <ul className=\"list-group\">\r\n                {(this.props.columnCheck.indexOf('chkcreateddate') === -1) ? <li className=\"list-group-item\" ><strong>Created Date: </strong>{this.props.task.CreatedDate}</li> : null }\r\n                {(this.props.columnCheck.indexOf('chkdescription') === -1) ? <li className=\"list-group-item\" ><strong>Description: </strong>{this.props.task.Description}</li> : null }\r\n                {(this.props.columnCheck.indexOf('chkseverity') === -1) ? <li className=\"list-group-item\" ><strong>Severity: </strong>{this.props.task.Severity}</li> : null }\r\n                {(this.props.columnCheck.indexOf('chkstatus') === -1) ? <li className=\"list-group-item\" ><strong>Status: </strong>{this.props.task.Status}</li> : null }\r\n                {(this.props.columnCheck.indexOf('chkresolved') === -1) ? <li className=\"list-group-item\" ><strong>Resolved Date: </strong>{this.props.task.ResolvedDate}</li> : null }\r\n            </ul>\r\n        );\r\n    };\r\n\r\n    \r\n\r\n    render(){\r\n\r\n        const editpath = `/issues/edit/${this.props.task._id}`;\r\n        return(\r\n        <div className=\"mt-1\">\r\n            <div>\r\n                <div  className=\"card\">\r\n                    <div className=\"card-header\" style={{backgroundColor: \"#6D7070\"}}>\r\n                        <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            <strong className=\"nav-link text-white\">Issue ID: {this.props.task.Id}</strong>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                            <Link className=\"nav-link btn text-white btn-primary float-right\" to={editpath}>Update</Link>\r\n                        </div>\r\n                        <div className=\"col-md-2\">\r\n                            <button type=\"button\"  className=\"nav-link btn btn-danger float-right\" onClick={this.props.removeIssue}>Delete</button>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"card-body\" style={{backgroundColor: \"#C2CACC\"}}>\r\n                        {this.getIssue()} \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Issue;","import axios from 'axios';\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport const ADD_ISSUE = \"ADD_ISSUE\";\r\nexport const REMOVE_ISSUE = \"REMOVE_ISSUE\";\r\nexport const GET_ISSUES = \"GET_ISSUES\";\r\nexport const EDIT_ISSUES = \"EDIT_ISSUES\";\r\nexport const FILTER_ISSUES= \"FILTER_ISSUES\";\r\nexport const DISPLAY_COLUMN_ISSUES = \"DISPLAY_COLUMN_ISSUES\";\r\nexport const SEARCH_ISSUES = \"SEARCH_ISSUES\";\r\n\r\n\r\nexport function handleAdd(task){\r\n\r\n    return {\r\n        type: ADD_ISSUE,\r\n        task\r\n    }\r\n}\r\n\r\nexport function handleEdit(issue){\r\n\r\n    return {\r\n        type: EDIT_ISSUES,\r\n        issue\r\n    }\r\n}\r\n\r\nexport function handleRemove(id){\r\n    return {\r\n        type: REMOVE_ISSUE ,\r\n        id\r\n    }\r\n}\r\n\r\nexport function handleIssues(data){\r\n    return {\r\n        type: GET_ISSUES ,\r\n        data\r\n    }\r\n}\r\n\r\n\r\nexport function handleFilter(data){\r\n    return {\r\n        type: FILTER_ISSUES ,\r\n        data\r\n    }\r\n}\r\n\r\nexport function handleDisplay(data){\r\n    return {\r\n        type: DISPLAY_COLUMN_ISSUES,\r\n        data\r\n    }\r\n}\r\n\r\nexport function handleSearch(data){\r\n    return {\r\n        type: SEARCH_ISSUES,\r\n        data\r\n    }\r\n}\r\n\r\n\r\nexport function getIssues(){\r\n    return dispatch => {\r\n        return fetch(\"/api/\")\r\n        .then(res => res.json())\r\n        .then(data => dispatch(handleIssues(data)))\r\n        .catch(err => console.log(err))\r\n    }\r\n}\r\n\r\nexport function addIssue(task){\r\n    \r\n    return dispatch => {\r\n        return axios.post('/api/',task)\r\n        .then(res=>console.log(res))\r\n        .then(data => dispatch(handleAdd(data)))\r\n        .catch(err => console.log(err));\r\n    };\r\n}\r\n\r\nexport function editIssue(issue){\r\n\r\n    return dispatch => {\r\n        return axios.put(`/api/${issue._id}`,issue)\r\n        .then(res=> <Redirect to=\"/issues\" />)\r\n        .catch(err => console.log(err));\r\n    };\r\n}\r\n\r\n\r\nexport function removeIssue(id){\r\n    return dispatch => {\r\n        return fetch(`/api/${id}`, {method: \"DELETE\"})\r\n        .then(res => res.json())\r\n        .then(data => dispatch(handleRemove(id)))\r\n        .catch(err => console.log(err))\r\n    }\r\n}\r\n\r\nexport function filterIssues(filterData){    \r\n    return dispatch => { dispatch(handleFilter(filterData))  };\r\n}\r\n\r\nexport function displayColumnIssues(filterData){    \r\n    return dispatch => { dispatch(handleDisplay(filterData))  };\r\n}\r\nexport function displaySearchIssues(searchData){    \r\n    return dispatch => { dispatch(handleSearch(searchData))  };\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nexport default class NewIssueForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            task:{\r\n                    Id:'',\r\n                    CreatedDate:'',\r\n                    Description:'',\r\n                    Severity:'',\r\n                    Status:'',\r\n                    ResolvedDate:''\r\n                },\r\n            displaySearchFilter: \"d-none\"\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this); \r\n           \r\n    }\r\n    handleSubmit (e) {\r\n        e.preventDefault();\r\n        this.props.handleSubmit(this.state.task);\r\n        e.target.reset();\r\n \r\n        this.props.history.push(\"/\");\r\n    } \r\n    handleChange(e) {\r\n        let value = e.target.value;\r\n        let key = e.target.name;\r\n        let {task}  = this.state;\r\n        task[key] = value;\r\n        this.setState({task});\r\n    }\r\n    componentWillMount(){\r\n        let date = new Date();\r\n        let dates = new Date();\r\n        this.setState({task: \r\n            { ...this.state.task,\r\n                Id: dates.getTime().toString(), CreatedDate: date.toString()\r\n            }\r\n        }); \r\n    }\r\n    componentDidMount(){\r\n        \r\n        document.getElementById('displaySearchFilter').className = \"d-none\";\r\n    }\r\n    componentwillUnmount(){\r\n        \r\n        document.getElementById('displaySearchFilter').className = \"d-block\";\r\n    }\r\n    componentDidUpdate(){\r\n                \r\n    }\r\n\r\n    render(){\r\n        \r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div className=\"card card-primary mt-1  mb-1\">\r\n                    <div className=\"card-header text-white\" style={{backgroundColor: \"#6D7070\"}}>\r\n                        <h5>Raise New Issue</h5>\r\n                    </div>\r\n                    <div className=\"card-body\" style={{backgroundColor: \"#C2CACC\"}}>  \r\n                        <div className=\"row\">   \r\n                        <div className=\"form-group col-md-6\">\r\n                            <label htmlFor=\"IssueId\">Issue ID</label>\r\n                            <input className=\"form-control\" id=\"IssueId\" name=\"Id\"  type=\"text\" readOnly value={this.state.task.Id}  />\r\n                        </div>  \r\n                        <div className=\"form-group col-md-6\">\r\n                            <label htmlFor=\"cd\">Created Date</label>\r\n                            <input className=\"form-control\" id=\"cd\" name=\"CreatedDate\" type=\"text\" readOnly value={this.state.task.CreatedDate} />\r\n                        </div>\r\n                        </div>\r\n                \r\n                        <div className=\"form-group\">\r\n                        <label htmlFor=\"des\" >Description **</label>\r\n                        <textarea className=\"form-control form-control-label\"  id=\"des\" required name=\"Description\" type=\"text\"  rows=\"3\" onChange={this.handleChange} ></textarea>\r\n                        <div className=\"invalid-feedback\" >\r\n                            Please describe the issue. It is a Mandatory Field.\r\n                        </div>\r\n                        </div>\r\n                \r\n                        <div className=\"row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label htmlFor=\"sev\">Severity Level</label>\r\n                            <div className=\"form-control\" id=\"sev\">\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input className=\"form-check-input\" type=\"radio\" id=\"sev1\" name=\"Severity\" value=\"Minor\" onChange={this.handleChange} />\r\n                                <label htmlFor=\"sev1\" className=\"form-check-label\">Minor</label>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input className=\"form-check-input\" type=\"radio\" id=\"sev2\" name=\"Severity\" value=\"Major\" onChange={this.handleChange} />\r\n                                <label htmlFor=\"sev2\" className=\"form-check-label\">Major</label>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input className=\"form-check-input\" type=\"radio\" id=\"sev3\" name=\"Severity\" value=\"Critical\" onChange={this.handleChange} />\r\n                                <label htmlFor=\"sev3\" className=\"form-check-label\">Critical</label>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                \r\n                        <div className=\"form-group col-md-6\">\r\n                            <label htmlFor=\"sta\">Status</label>\r\n                            <div className=\"form-control\" id=\"sta\">\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input className=\"form-check-input\" type=\"radio\" id=\"sta1\" name=\"Status\" value=\"Open\" onChange={this.handleChange} />\r\n                                <label htmlFor=\"sta1\" className=\"form-check-label\">Open</label>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input className=\"form-check-input\" type=\"radio\" id=\"sta2\" name=\"Status\" value=\"In Progress\" onChange={this.handleChange} />\r\n                                <label htmlFor=\"sta2\" className=\"form-check-label\">In Progress</label>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input className=\"form-check-input\" type=\"radio\" id=\"sta3\" name=\"Status\" value=\"Resolved\" onChange={this.handleChange} />\r\n                                <label htmlFor=\"sta3\" className=\"form-check-label\">Resolved</label>\r\n                            </div>\r\n                            <div className=\"form-group mt-3\" >\r\n                                <label htmlFor=\"res\">Resolved Date **</label>\r\n                                <input className=\"form-control\"  id=\"res\" name=\"ResolvedDate\"  type=\"date\"/>\r\n                                <div className=\"invalid-feedback\">\r\n                                Please select Resolved Date. It is a Mandatory Field.\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"help-block text-muted ml-3\">\r\n                            ** Mandatory field.\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-footer\" style={{backgroundColor: \"#D0D9DA\"}}>\r\n                        <input className=\"btn btn-primary\"  type=\"submit\" value=\"Save\" />\r\n                    </div>\r\n                </div>\r\n            </form>            \r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport  {withRouter} from 'react-router-dom';\r\n\r\nclass EditIssueForm extends Component {\r\n    constructor(props){\r\n\r\n        super(props);\r\n        this.state = {\r\n            issue:{\r\n                    Id:'',\r\n                    CreatedDate:'',\r\n                    Description:'',\r\n                    Severity:'',\r\n                    Status:'',\r\n                    ResolvedDate:''\r\n                },\r\n                id: 0\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);               \r\n    }\r\n    componentDidMount(){\r\n\r\n        let id = this.props.match.params.issueId;\r\n        let issue = {};\r\n        document.getElementById('displaySearchFilter').className = \"d-none\";\r\n        axios.get(`/api/${id}`)\r\n        .then(res => {\r\n          issue=res.data;    \r\n          this.setState({issue,id});\r\n        })\r\n        .catch(error=> console.log(error));\r\n      }\r\n\r\n      \r\n    handleSubmit (e) {\r\n  \r\n        e.preventDefault();\r\n        axios.put(`/api/${this.state.issue._id}`,this.state.issue)\r\n        .then(res=> this.props.history.push(\"/\"))\r\n        .catch(err => console.log(err));\r\n    } \r\n    handleChange(e) {\r\n        let value = e.target.value;\r\n        let key = e.target.name;\r\n        let {issue}  = this.state;\r\n        issue[key] = value;\r\n        this.setState({issue});\r\n    } \r\n    componentwillUnmount(){        \r\n        document.getElementById('displaySearchFilter').className = \"d-block\";\r\n    }\r\n\r\n    render(){\r\n        let setSeverity = this.state.issue.Severity, selectSeverity1 = '', selectSeverity2 = '' , selectSeverity3 = '', setStatus = this.state.issue.Status, selectStatus1 = '', selectStatus2 = '' , selectStatus3 = '';\r\n        if(setSeverity === \"Minor\"){selectSeverity1 = 'checked' }else if(setSeverity === \"Major\"){ selectSeverity2 = 'checked'  }else{ selectSeverity3 = 'checked'  }\r\n        if(setStatus === \"Open\"){selectStatus1 = 'checked' }else if(setSeverity === \"In Progress\"){ selectStatus2 = 'checked'  }else{ selectStatus3 = 'checked'  }\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div className=\"card card-primary mt-1  mb-1\">\r\n                    <div className=\"card-header text-white\" style={{backgroundColor: \"#6D7070\"}}>\r\n                        <h5>Raise New Issue</h5>\r\n                    </div>\r\n                    <div className=\"card-body\" style={{backgroundColor: \"#C2CACC\"}}>  \r\n                        <div className=\"row\">   \r\n                        <div className=\"form-group col-md-6\">\r\n                            <label htmlFor=\"IssueId\">Issue ID</label>\r\n                            <input className=\"form-control\" id=\"IssueId\" name=\"Id\"  type=\"text\" readOnly value={this.state.issue.Id}  />\r\n                        </div>  \r\n                        <div className=\"form-group col-md-6\">\r\n                            <label htmlFor=\"cd\">Created Date</label>\r\n                            <input className=\"form-control\" id=\"cd\" name=\"CreatedDate\" type=\"text\" readOnly value={this.state.issue.CreatedDate} />\r\n                        </div>\r\n                        </div>\r\n                \r\n                        <div className=\"form-group\">\r\n                        <label htmlFor=\"des\" >Description **</label>\r\n                        <textarea className=\"form-control form-control-label\"  id=\"des\" required name=\"Description\" type=\"text\"  rows=\"3\"  onChange={this.handleChange} value={this.state.issue.Description} ></textarea>\r\n                        <div className=\"invalid-feedback\" >\r\n                            Please describe the issue. It is a Mandatory Field.\r\n                        </div>\r\n                        </div>\r\n                \r\n                        <div className=\"row\">\r\n                        <div className=\"form-group col-md-6\">\r\n                            <label htmlFor=\"sev\">Severity Level</label>\r\n                            <div className=\"form-control\" id=\"sev\">\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input className=\"form-check-input\" type=\"radio\" id=\"sev1\" name=\"Severity\" value=\"Minor\" checked={selectSeverity1} onChange={this.handleChange} />\r\n                                <label htmlFor=\"sev1\" className=\"form-check-label\">Minor</label>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input className=\"form-check-input\" type=\"radio\" id=\"sev2\" name=\"Severity\" value=\"Major\" checked={selectSeverity2} onChange={this.handleChange} />\r\n                                <label htmlFor=\"sev2\" className=\"form-check-label\">Major</label>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input className=\"form-check-input\" type=\"radio\" id=\"sev3\" name=\"Severity\" value=\"Critical\"  checked={selectSeverity3} onChange={this.handleChange} />\r\n                                <label htmlFor=\"sev3\" className=\"form-check-label\">Critical</label>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                \r\n                        <div className=\"form-group col-md-6\">\r\n                            <label htmlFor=\"sta\">Status</label>\r\n                            <div className=\"form-control\" id=\"sta\">\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input className=\"form-check-input\" type=\"radio\" id=\"sta1\" name=\"Status\" value=\"Open\" checked={selectStatus1} onChange={this.handleChange} />\r\n                                <label htmlFor=\"sta1\" className=\"form-check-label\">Open</label>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input className=\"form-check-input\" type=\"radio\" id=\"sta2\" name=\"Status\" value=\"In Progress\" checked={selectStatus2}  onChange={this.handleChange} />\r\n                                <label htmlFor=\"sta2\" className=\"form-check-label\">In Progress</label>\r\n                            </div>\r\n                            \r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input className=\"form-check-input\" type=\"radio\" id=\"sta3\" name=\"Status\" value=\"Resolved\" checked={selectStatus3}  onChange={this.handleChange} />\r\n                                <label htmlFor=\"sta3\" className=\"form-check-label\">Resolved</label>\r\n                            </div>\r\n                            <div className=\"form-group mt-3\" >\r\n                                <label htmlFor=\"res\">Resolved Date **</label>\r\n                                <input className=\"form-control\"  id=\"res\" name=\"ResolvedDate\" onChange={this.handleChange} value={this.state.issue.ResolvedDate}  type=\"date\"/>\r\n                                <div className=\"invalid-feedback\">\r\n                                Please select Resolved Date. It is a Mandatory Field.\r\n                                </div>\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-footer\" style={{backgroundColor: \"#D0D9DA\"}}>\r\n                        <input className=\"btn btn-primary\"  type=\"submit\" value=\"Edit Issue\" />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(EditIssueForm);","import React, { Component } from 'react';\r\n\r\nclass DescriptionSearch extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            searchText: \"\"\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        \r\n        this.props.handleSearchWithinIssues(this.state.searchText);\r\n    }\r\n    handleChange(e) {\r\n        let value = e.target.value;\r\n        this.setState({searchText: value});\r\n    } \r\n\r\n    render(){\r\n        return(\r\n            <div className=\"card\">\r\n                <div className=\"card-header bg-white\">\r\n                    <button className=\"btn btn-light font-weight-bold\">Search Description</button>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <div className='form-inline'>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div>\r\n                                <span><input className=\"form-control input-sm mr-1\" type='text' id='search' onChange={this.handleChange} /></span>\r\n                                <span style={{backgroundColor: \"#D0D9DA\"}}><input className=\"btn btn-primary\"  type=\"submit\" value=\"Search\" /></span>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>  \r\n            </div>     \r\n        );\r\n    }\r\n}\r\n\r\nexport default DescriptionSearch;","import React, { Component } from 'react';\r\n\r\nclass ColumnFilter extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            chkcreateddate: true,\r\n            chkdescription: true,\r\n            chkseverity: true,\r\n            chkstatus: true\r\n        }\r\n        this.displayFilterItems = this.displayFilterItems.bind(this);\r\n        this.getSeverityFilter = this.getSeverityFilter.bind(this);\r\n        this.getStatusFilter = this.getStatusFilter.bind(this);\r\n    }\r\n\r\n\r\n    displayFilterItems(){\r\n\r\n    }\r\n\r\n    getSeverityFilter(e) {\r\n        let filterSev = e.target.value;\r\n        this.props.handleFilterSeverity({Severity: filterSev});\r\n    }\r\n\r\n    getStatusFilter(e) {\r\n        let filterStatus = e.target.value;\r\n        this.props.handleFilterSeverity({Status: filterStatus});\r\n    } \r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"card text-right\">\r\n                <div className=\"card-header bg-white\">\r\n                    <button className=\"btn btn-light font-weight-bold\" onClick={this.displayFilterItems}>Filter</button>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form  id=\"filterForm\">\r\n                        <h6 className=\"card-title align-right\">Severity Filter</h6>\r\n                        <div className=\"form-group\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\" type=\"radio\" id=\"sevfilter1\" name=\"sevfilter\" value=\"Minor\" onClick={this.getSeverityFilter}/>\r\n                            <label className=\"form-check-label\" htmlFor=\"sevfilter1\">Minor</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\" type=\"radio\" id=\"sevfilter2\" name=\"sevfilter\" value=\"Major\" onClick={this.getSeverityFilter} />\r\n                            <label className=\"form-check-label\" htmlFor=\"sevfilter2\">Major</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\" type=\"radio\" id=\"sevfilter3\" name=\"sevfilter\" value=\"Critical\" onClick={this.getSeverityFilter} />\r\n                            <label className=\"form-check-label\" htmlFor=\"sevfilter3\">Critical</label>\r\n                        </div>\r\n                        </div>\r\n                        <h6 className=\"card-title align-right\">Status Filter</h6>\r\n                        <div className=\"form-group\">\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\" type=\"radio\" id=\"stafilter1\" name=\"stafilter\" value=\"Open\" onClick={this.getStatusFilter} />\r\n                            <label className=\"form-check-label\" htmlFor=\"stafilter1\">Open</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\" type=\"radio\" id=\"stafilter2\" name=\"stafilter\" value=\"In Progress\" onClick={this.getStatusFilter} />\r\n                            <label className=\"form-check-label\" htmlFor=\"stafilter2\">In Progress</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\" type=\"radio\" id=\"stafilter3\" name=\"stafilter\" value=\"Resolved\" onClick={this.getStatusFilter} />\r\n                            <label className=\"form-check-label\" htmlFor=\"stafilter3\">Resolved</label>\r\n                        </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ColumnFilter;","import React, { Component } from 'react';\r\n\r\nclass ColumnDisplay extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            chkcreateddate: true,\r\n            chkdescription: true,\r\n            chkseverity: true,\r\n            chkstatus: true,\r\n            chkresolved:true\r\n        }\r\n        this.setDisplay = this.setDisplay.bind(this);\r\n    }\r\n\r\n    setDisplay = (e) => {   \r\n        let columnDisplayForm = document.forms['customForm'].elements['customitem[]']; \r\n        let columnDisplayArr = [];\r\n        columnDisplayForm.forEach(function(val, index){ \r\n            if(columnDisplayForm[index].checked !== true){ \r\n                columnDisplayArr.push(columnDisplayForm[index].id)\r\n            }\r\n        });\r\n        this.props.handleDisplayColumns(columnDisplayArr);\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"card\">\r\n                <div className=\"card-header bg-white\">\r\n                    <button className=\"btn btn-light font-weight-bold\">Customise</button>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <form  id=\"customForm\">\r\n                        <h6 className=\"card-title align-right \">Customise View</h6>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-check\">\r\n                                <input className=\"form-check-input\" type=\"checkbox\" id=\"chkcreateddate\" name=\"customitem[]\" checked={(this.props.columnCheck.indexOf('chkcreateddate') === -1) ? true : '' } onChange={this.setDisplay}  />\r\n                                <label className=\"form-check-label\" htmlFor=\"item1\">Created Date</label>\r\n                            </div>\r\n                            <div className=\"form-check\">\r\n                                <input className=\"form-check-input\" type=\"checkbox\" id=\"chkdescription\" name=\"customitem[]\" checked={(this.props.columnCheck.indexOf('chkdescription') === -1) ? true : '' } onChange={this.setDisplay}  />\r\n                                <label className=\"form-check-label\" htmlFor=\"item2\">Description</label>\r\n                            </div>\r\n                            <div className=\"form-check\">\r\n                                <input className=\"form-check-input\" type=\"checkbox\" id=\"chkseverity\" name=\"customitem[]\" checked={(this.props.columnCheck.indexOf('chkseverity') === -1) ? true : '' }  onChange={this.setDisplay}  />\r\n                                <label className=\"form-check-label\" htmlFor=\"item3\">Severity</label>\r\n                            </div>\r\n                            <div className=\"form-check\">\r\n                                <input className=\"form-check-input\" type=\"checkbox\" id=\"chkstatus\" name=\"customitem[]\" checked={(this.props.columnCheck.indexOf('chkstatus') === -1) ? true : '' } onChange={this.setDisplay}  />\r\n                                <label className=\"form-check-label\" htmlFor=\"item4\">Status</label>\r\n                            </div>\r\n                            <div className=\"form-check\">\r\n                                <input className=\"form-check-input\" type=\"checkbox\" id=\"chkresolved\" name=\"customitem[]\" checked= {(this.props.columnCheck.indexOf('chkresolved') === -1) ? true : '' } onChange={this.setDisplay}  />\r\n                                <label className=\"form-check-label\" htmlFor=\"item5\">Resolved Date</label>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ColumnDisplay;","import React  , {Component} from 'react';\r\nimport Issue from './Issue';\r\nimport { connect } from 'react-redux';\r\nimport  { addIssue, editIssue, removeIssue, getIssues, filterIssues, displayColumnIssues, displaySearchIssues} from './actionCreators';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport NewIssueForm from './NewIssueForm';\r\nimport EditIssueForm from './EditIssueForm';\r\nimport DescriptionSearch from './DescriptionSearch'; \r\nimport ColumnFilter from './ColumnFilter';\r\nimport ColumnDisplay from './ColumnDisplay';\r\n\r\n\r\n\r\nclass IssueList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.handleAdd = this.handleAdd.bind(this);\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n        this.handleDisplay = this.handleDisplay.bind(this);\r\n        this.handleSearchDisplay = this.handleSearchDisplay.bind(this);\r\n        this.state = {\r\n            issues: this.props.issues,\r\n            displaySearchFilter: \"d-block\"\r\n        }\r\n    }\r\n    handleAdd(val){\r\n        this.props.addIssue(val);\r\n    }\r\n    removeIssue(id){\r\n        this.props.removeIssue(id);\r\n    }\r\n    handleEdit(val){    \r\n        this.props.editIssue(val);\r\n    }\r\n    handleFilter(val){   \r\n        this.props.filterIssues(val);\r\n    }\r\n    handleDisplay(val){   \r\n        this.props.displayColumnIssues(val);\r\n    }\r\n    handleSearchDisplay(val){   \r\n        this.props.displaySearchIssues(val);\r\n    }\r\n    \r\n    editIssue(id){   \r\n        this.props.editIssue(id);\r\n    }   \r\n    componentDidMount(){        \r\n        //document.getElementById('displaySearchFilter').className = \"d-block\";\r\n        this.setState({displaySearchFilter : \"d-block\"});\r\n        this.props.getIssues();\r\n    }\r\n    componentWillMount(){        \r\n        this.setState({displaySearchFilter : \"d-block\"});           \r\n    }\r\n    componentWillUpdate(){         \r\n        if(this.props.match.path === '/issues'){\r\n            document.getElementById('displaySearchFilter').className = \"d-block\";      \r\n        } \r\n    }\r\n    render(){          \r\n\r\n        let issueArr = [], issues = [];\r\n        \r\n        if(this.props.filterCategory.hasOwnProperty('Severity') === true){\r\n            issueArr = this.props.issues.filter(val => val.Severity === this.props.filterCategory.Severity);\r\n        }else if(this.props.filterCategory.hasOwnProperty('Status') === true){\r\n          issueArr = this.props.issues.filter(val => val.Status === this.props.filterCategory.Status);\r\n        }else if(this.props.searchText !== '' && this.props.searchText !== undefined){            \r\n            issueArr = this.props.issues.filter(val => val.Description.indexOf(this.props.searchText) !== -1);            \r\n        }else{\r\n              issueArr = this.props.issues;\r\n        }\r\n       \r\n        if(issues.length === 0){\r\n            issues = \"<Issue removeIssue={} editIssue={} task={} key={} />\";\r\n        }\r\n        issues = issueArr.map((val, index) => (\r\n            <Issue \r\n                removeIssue={this.removeIssue.bind(this, val._id)} \r\n                editIssue={this.editIssue.bind(this, val._id)} \r\n                task={val}\r\n                columnCheck={this.props.columnDisplay} \r\n                searchText={this.props.searchText} \r\n                key={val._id} \r\n            />\r\n        ));\r\n\r\n        return(\r\n            <div className=\"container\">\r\n               <div className={this.state.displaySearchFilter} id=\"displaySearchFilter\">     \r\n                    <div className=\"card-group\">\r\n                        <div>\r\n                            <DescriptionSearch handleSearchWithinIssues={this.handleSearchDisplay} getPreviousSearchText={this.props.searchText}/>\r\n                        </div>                    \r\n                        <div>\r\n                            <ColumnFilter handleFilterSeverity={this.handleFilter}/>\r\n                        </div>\r\n                        <div>\r\n                            <ColumnDisplay handleDisplayColumns={this.handleDisplay} columnCheck={this.props.columnDisplay}  />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Route \r\n                    path=\"/issues/new\" \r\n                    component={ props => (\r\n                        <NewIssueForm {...props} handleSubmit={this.handleAdd} />\r\n                    )} \r\n                />\r\n                <Route \r\n                    path=\"/issues/edit/:issueId\" \r\n                    component={ props => (\r\n                        <EditIssueForm {...props} handleSubmit={this.handleEdit} />\r\n                    )} \r\n                />\r\n                <Route exact path=\"/issues\" component={() => (\r\n                    <div>{issues}</div>\r\n                    \r\n                )} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (reduxState) => {\r\n    return {\r\n        issues: reduxState.issues,\r\n        filterCategory: reduxState.filterCategory,\r\n        columnDisplay: reduxState.columnDisplay,\r\n        searchText: reduxState.searchText\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {addIssue, editIssue, removeIssue, getIssues, filterIssues, displayColumnIssues, displaySearchIssues})(IssueList);","import React, { Component } from 'react';\nimport './App.css';\nimport Home from './Home';\nimport IssueList from './IssueList';\nimport { Link, Route, Redirect } from 'react-router-dom';\n\n\nclass App extends Component {\n \n  render() {\n    return (\n      <div>\n         <h1 className=\"text-center\">Welcome to Issuetracker</h1>\n          <nav className=\"navbar navbar-expand-lg navbar-dark\" style={{backgroundColor: \"#9E9FA0\"}}>\n            <Link className=\"navbar-brand\" to=\"/\">Issue Tracker</Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\">\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/\" style={{ marginLeft: '20px'}}>Home</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/issues\" style={{ marginLeft: '20px'}}>List of Issues</Link>\n                </li>\n              </ul>\n              <Link className=\"nav-link btn btn-primary float-right\" to=\"/issues/new\">Add new issue</Link>\n            </div>\n          </nav>\n          \n          <Route exact path=\"/\" render ={() => ( <Redirect to=\"/home\" />)} />\n          <Route path=\"/home\" component={Home} />\n          <Route path=\"/issues\" component={IssueList} />        \n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import  { ADD_ISSUE, EDIT_ISSUES,  REMOVE_ISSUE, GET_ISSUES, FILTER_ISSUES, DISPLAY_COLUMN_ISSUES, SEARCH_ISSUES } from './actionCreators';\r\n\r\nconst initialState = {\r\n    issues : [],\r\n    id:0,\r\n    filterCategory: {},\r\n    columnDisplay: [],\r\n    searchText: ''\r\n}\r\n\r\nexport default function rootReducer (state = initialState, action){\r\n\r\n    switch(action.type){\r\n        case GET_ISSUES:\r\n            return {...state, issues: action.data}\r\n        case ADD_ISSUE:\r\n            return { ...state, issues: [...state.issues, action.issue]};\r\n        case EDIT_ISSUES:  \r\n            return {...state, issues: action.data};\r\n        case REMOVE_ISSUE:\r\n            let issues = state.issues.filter(val => val._id !== action.id);\r\n            return { ...state, issues};\r\n        case FILTER_ISSUES:\r\n            return { ...state, filterCategory: action.data };\r\n        case DISPLAY_COLUMN_ISSUES:\r\n            return  {...state, columnDisplay: action.data}  \r\n        case SEARCH_ISSUES:\r\n            return  {...state, searchText: action.data}   \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore , applyMiddleware, compose} from 'redux';\nimport rootReducer from './rootReducer';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport thunk from \"redux-thunk\";\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\n\nconst store = createStore(\n    rootReducer,\n    compose(applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n    );\n\n\nReactDOM.render(\n\n<Provider store={store}>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n</Provider>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}